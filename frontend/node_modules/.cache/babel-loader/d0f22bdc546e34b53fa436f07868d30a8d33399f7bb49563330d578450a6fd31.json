{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANGAM REVATHI\\\\OneDrive\\\\Documents\\\\resume_Projects\\\\blog-website\\\\frontend\\\\src\\\\components\\\\Home\\\\NewsBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\"; // Import useState here\nimport Newsitem from \"./Newsitem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsBoard = () => {\n  _s();\n  // creating use state variable\n  const [articles, setArticles] = useState([]);\n  useEffect(() => {\n    // Correct API key usage for Vite/Create React App\n    // Ensure Api_key is defined in your .env file as VITE_Api_key or REACT_APP_Api_key\n    let url = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${import.meta.env.Api || process.env.REACT_APP_Api_key}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setArticles(data.articles);\n    }).catch(error => console.error(\"Error fetching news:\", error)); // Good practice to catch errors\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: [\"Latest \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-danger\",\n        children: \"News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), articles.map((news, index) =>\n    /*#__PURE__*/\n    // Correctly opened and implicitly returned\n    _jsxDEV(Newsitem, {\n      title: news.title,\n      description: news.description,\n      src: news.urlToImage,\n      url: news.url\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsBoard, \"XsOpLvUbTkfx79dw07TVNsBviNQ=\");\n_c = NewsBoard;\nexport default NewsBoard;\nvar _c;\n$RefreshReg$(_c, \"NewsBoard\");","map":{"version":3,"names":["React","useEffect","useState","Newsitem","jsxDEV","_jsxDEV","NewsBoard","_s","articles","setArticles","url","import","meta","env","Api","process","REACT_APP_Api_key","fetch","then","response","json","data","catch","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","news","index","title","description","src","urlToImage","_c","$RefreshReg$"],"sources":["C:/Users/SANGAM REVATHI/OneDrive/Documents/resume_Projects/blog-website/frontend/src/components/Home/NewsBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; // Import useState here\nimport Newsitem from \"./Newsitem\";\n\nconst NewsBoard = () => {\n    // creating use state variable\n    const [articles, setArticles] = useState([]);\n\n    useEffect(() => {\n        // Correct API key usage for Vite/Create React App\n        // Ensure Api_key is defined in your .env file as VITE_Api_key or REACT_APP_Api_key\n        let url = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${import.meta.env.Api || process.env.REACT_APP_Api_key}`;\n\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setArticles(data.articles);\n            })\n            .catch(error => console.error(\"Error fetching news:\", error)); // Good practice to catch errors\n    }, []); \n\n    return (\n        <div>\n            <h2 className=\"text-center\">Latest <span className=\"badge bg-danger\">News</span></h2>\n            {articles.map((news, index) => ( // Correctly opened and implicitly returned\n                <Newsitem key={index} title={news.title} description={news.description} src={news.urlToImage} url={news.url}/>\n\t))}\n        </div>\n    );\n};\n\nexport default NewsBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACpD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIS,GAAG,GAAG,0DAA0DC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIC,OAAO,CAACF,GAAG,CAACG,iBAAiB,EAAE;IAE1HC,KAAK,CAACP,GAAG,CAAC,CACLQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVZ,WAAW,CAACY,IAAI,CAACb,QAAQ,CAAC;IAC9B,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAIqB,SAAS,EAAC,aAAa;MAAAD,QAAA,GAAC,SAAO,eAAApB,OAAA;QAAMqB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpFtB,QAAQ,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;IAAA;IAAO;IAC7B5B,OAAA,CAACF,QAAQ;MAAa+B,KAAK,EAAEF,IAAI,CAACE,KAAM;MAACC,WAAW,EAAEH,IAAI,CAACG,WAAY;MAACC,GAAG,EAAEJ,IAAI,CAACK,UAAW;MAAC3B,GAAG,EAAEsB,IAAI,CAACtB;IAAI,GAA7FuB,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyF,CAC3H,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEd,CAAC;AAACvB,EAAA,CAzBID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}